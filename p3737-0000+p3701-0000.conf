# Copyright (c) 2022-2023, NVIDIA CORPORATION. All rights reserved.
#
# Redistribution and use in source and binary forms, with or without
# modification, are permitted provided that the following conditions
# are met:
#  * Redistributions of source code must retain the above copyright
#    notice, this list of conditions and the following disclaimer.
#  * Redistributions in binary form must reproduce the above copyright
#    notice, this list of conditions and the following disclaimer in the
#    documentation and/or other materials provided with the distribution.
#  * Neither the name of NVIDIA CORPORATION nor the names of its
#    contributors may be used to endorse or promote products derived
#    from this software without specific prior written permission.
#
# THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS ``AS IS'' AND ANY
# EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
# IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR
# PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL THE COPYRIGHT OWNER OR
# CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL,
# EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO,
# PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR
# PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY
# OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
# (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE
# OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.

# p3737-0000+p3701-0000.conf: configuration for "P3701 + P3737"
# (T234 P3710).

# Sourced by bash script.
# Disable unused variable check. Most of these variables are used in an outer
# script that sources this file.

source "${LDK_DIR}/p3701.conf.common";

# update_flash_args_common:
update_flash_args_common()
{
	# update pinmux for concord
	if [ "${board_sku}" != "0005" ]; then
		if [ "${chip_SKU}" = "00" ] || [ "${chip_SKU}" = "D0" ]; then
			if [ "${board_FAB}" = "TS1" ] || [ "${board_FAB}" = "TS2" ] ||
			[ "${board_FAB}" = "TS3" ] || [ "${board_FAB}" = "EB1" ] ||
			[ "${board_FAB}" = "EB2" ] || [ "${board_FAB}" = "EB3" ] ||
			[ "${board_FAB}" = "000" ] || [ "${board_FAB}" = "100" ] ||
			[ "${board_FAB}" = "200" ]; then
				PINMUX_CONFIG="tegra234-mb1-bct-pinmux-p3701-0000.dtsi";
				PMC_CONFIG="tegra234-mb1-bct-padvoltage-p3701-0000.dtsi";
			fi
		fi
	fi

	if [ "${board_sku}" = "0001" ] || [ "${board_sku}" = "0002" ]; then
		DTB_FILE=tegra234-p3701-0000-p3737-0000.dtb;
		TBCDTB_FILE=tegra234-p3701-0000-p3737-0000.dtb;
		BPFDTB_FILE=tegra234-bpmp-3701-0000-3737-0000.dtb;
	fi

	if [ "${board_sku}" = "0008" ]; then
		BADPAGEFILE="bootloader/badpage.bin";
		EMMC_CFG="flash_t234_qspi_sdmmc_industrial.xml";
		FSIFWFILE="bootloader/fsi-fw.bin";
		MISC_CONFIG=tegra234-mb1-bct-misc-p3701-0008.dts;
	fi
}

# update_flash_args:
update_flash_args()
{
	# All updates should go into update_flash_args_common to allow
	# for other files to include this file and override variables.
	update_flash_args_common
}

# update_local_cfgfile
update_local_cfgfile()
{
	# Update "num_sectors" in local cfgfile for the device
	# with FAB=501 and BOARDSKU=0004
	local local_cfgfile="${1}"
	if [ "${board_FAB}" == "501" ] && [ "${board_sku}" == "0004" ]; then
		sed -i 's/num_sectors=\"124321792\"/num_sectors=\"124190720\"/' "${local_cfgfile}"
	fi
}

DTB_FILE="tegra234-p3701-0000-p3737-0000.dtb";
TBCDTB_FILE="tegra234-p3701-0000-p3737-0000.dtb";
EMMC_CFG="flash_t234_qspi_sdmmc.xml";
OVERLAY_DTB_FILE="${OVERLAY_DTB_FILE},tegra234-p3737-camera-dual-imx274-overlay.dtbo,tegra234-p3737-camera-e3331-overlay.dtbo,tegra234-p3737-camera-e3333-overlay.dtbo,tegra234-p3737-camera-imx185-overlay.dtbo,tegra234-p3737-camera-imx390-overlay.dtbo";

# Rootfs A/B:
if [[ "${ROOTFS_AB}" == 1 && "${ROOTFS_ENC}" == "" ]]; then
	EMMC_CFG=flash_t234_qspi_sdmmc_rootfs_ab.xml;
# Disk encryption support:
elif [[ "${ROOTFS_AB}" == "" && "${ROOTFS_ENC}" == 1 ]]; then
	disk_enc_enable=1;
	EMMC_CFG=flash_t234_qspi_sdmmc_enc_rfs.xml;
# Rootfs A/B + Disk encryption support:
elif [[ "${ROOTFS_AB}" == 1 && "${ROOTFS_ENC}" == 1 ]]; then
	disk_enc_enable=1;
	EMMC_CFG=flash_t234_qspi_sdmmc_enc_rootfs_ab.xml;
fi;
