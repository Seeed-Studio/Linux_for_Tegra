From c500b7890de62fadb5061028bc6b3584ffbfd8c1 Mon Sep 17 00:00:00 2001
From: kartik <kkartik@nvidia.com>
Date: Fri, 23 Apr 2021 14:37:20 +0530
Subject: [PATCH 830/830] kernel-5.10: fix build errors with
 tegra_android_defconfig
X-NVConfidentiality: public

Fix build errors with tegra_android_defconfig

Change-Id: Iff0d3e68bf14b3ac6f7cd5efd3d36437baf346c0
Signed-off-by: kartik <kkartik@nvidia.com>
---
 drivers/scsi/ufs/ufshcd-pci.c |  5 +++--
 fs/crypto/keysetup.c          |  2 +-
 fs/ext4/namei.c               |  2 +-
 include/trace/bpf_probe.h     |  2 +-
 kernel/cgroup/cpuset.c        |  2 --
 net/core/filter.c             |  7 -------
 verity_dev_keys.x509          | 24 ++++++++++++++++++++++++
 7 files changed, 30 insertions(+), 14 deletions(-)
 create mode 100644 verity_dev_keys.x509

diff --git a/drivers/scsi/ufs/ufshcd-pci.c b/drivers/scsi/ufs/ufshcd-pci.c
index 2d0ec45e063c..ab8a840b07ea 100644
--- a/drivers/scsi/ufs/ufshcd-pci.c
+++ b/drivers/scsi/ufs/ufshcd-pci.c
@@ -25,7 +25,7 @@ struct intel_host {
 
 static int ufs_intel_disable_lcc(struct ufs_hba *hba)
 {
-	u32 attr = UIC_ARG_MIB(PA_LOCAL_TX_LCC_ENABLE);
+	u32 attr = UIC_ARG_MIB(PA_Local_TX_LCC_Enable);
 	u32 lcc_enable = 0;
 
 	ufshcd_dme_get(hba, attr, &lcc_enable);
@@ -341,8 +341,9 @@ ufshcd_pci_probe(struct pci_dev *pdev, const struct pci_device_id *id)
 	}
 
 	mmio_base = pcim_iomap_table(pdev)[0];
+	hba->dev = &pdev->dev;
 
-	err = ufshcd_alloc_host(&pdev->dev, &hba);
+	err = ufshcd_alloc_host(hba);
 	if (err) {
 		dev_err(&pdev->dev, "Allocation failed\n");
 		return err;
diff --git a/fs/crypto/keysetup.c b/fs/crypto/keysetup.c
index 1299d155bc8b..8cc2b1be33e5 100644
--- a/fs/crypto/keysetup.c
+++ b/fs/crypto/keysetup.c
@@ -205,7 +205,7 @@ static int setup_per_mode_enc_key(struct fscrypt_info *ci,
 			err = -EINVAL;
 			goto out_unlock;
 		}
-		for (i = 0; i <= __FSCRYPT_MODE_MAX; i++) {
+		for (i = 0; i <= FSCRYPT_MODE_MAX; i++) {
 			if (fscrypt_is_key_prepared(&keys[i], ci)) {
 				fscrypt_warn(ci->ci_inode,
 					     "Each hardware-wrapped key can only be used with one encryption mode");
diff --git a/fs/ext4/namei.c b/fs/ext4/namei.c
index 35fec16e38a9..3aaee65905fa 100644
--- a/fs/ext4/namei.c
+++ b/fs/ext4/namei.c
@@ -3732,7 +3732,7 @@ static void ext4_resetent(handle_t *handle, struct ext4_renament *ent,
 	 * so the old->de may no longer valid and need to find it again
 	 * before reset old inode info.
 	 */
-	old.bh = ext4_find_entry(old.dir, &old.dentry->d_name, &old.de, NULL);
+	old.bh = ext4_find_entry(old.dir, &old.dentry->d_name, &old.de, NULL, NULL);
 	if (IS_ERR(old.bh))
 		retval = PTR_ERR(old.bh);
 	if (!old.bh)
diff --git a/include/trace/bpf_probe.h b/include/trace/bpf_probe.h
index cd74bffed5c6..2e8f60ca7426 100644
--- a/include/trace/bpf_probe.h
+++ b/include/trace/bpf_probe.h
@@ -33,7 +33,7 @@
 		   __builtin_choose_expr(size == 2, (u16)2, \
 		   __builtin_choose_expr(size == 4, (u32)3, \
 		   __builtin_choose_expr(size == 8, (u64)4, \
-					 (void)5)))))
+					 (u64)5)))))
 #define __CAST_TO_U64(x) ({ \
 	typeof(x) __src = (x); \
 	UINTTYPE(sizeof(x)) __dst; \
diff --git a/kernel/cgroup/cpuset.c b/kernel/cgroup/cpuset.c
index 68d5f644a4a8..0e2c96d6488a 100644
--- a/kernel/cgroup/cpuset.c
+++ b/kernel/cgroup/cpuset.c
@@ -1491,8 +1491,6 @@ static void update_sibling_cpumasks(struct cpuset *parent, struct cpuset *cs,
 	struct cpuset *sibling;
 	struct cgroup_subsys_state *pos_css;
 
-	percpu_rwsem_assert_held(&cpuset_rwsem);
-
 	/*
 	 * Check all its siblings and call update_cpumasks_hier()
 	 * if their use_parent_ecpus flag is set in order for them
diff --git a/net/core/filter.c b/net/core/filter.c
index ee75b19dbf88..659a32802471 100644
--- a/net/core/filter.c
+++ b/net/core/filter.c
@@ -3553,13 +3553,6 @@ static int bpf_skb_net_shrink(struct sk_buff *skb, u32 off, u32 len_diff,
 
 #define BPF_SKB_MAX_LEN SKB_MAX_ALLOC
 
-static u32 __bpf_skb_max_len(const struct sk_buff *skb)
-{
-	if (skb_at_tc_ingress(skb) || !skb->dev)
-		return SKB_MAX_ALLOC;
-	return skb->dev->mtu + skb->dev->hard_header_len;
-}
-
 BPF_CALL_4(sk_skb_adjust_room, struct sk_buff *, skb, s32, len_diff,
 	   u32, mode, u64, flags)
 {
diff --git a/verity_dev_keys.x509 b/verity_dev_keys.x509
new file mode 100644
index 000000000000..86399c3c1dd7
--- /dev/null
+++ b/verity_dev_keys.x509
@@ -0,0 +1,24 @@
+-----BEGIN CERTIFICATE-----
+MIID/TCCAuWgAwIBAgIJAJcPmDkJqolJMA0GCSqGSIb3DQEBBQUAMIGUMQswCQYD
+VQQGEwJVUzETMBEGA1UECAwKQ2FsaWZvcm5pYTEWMBQGA1UEBwwNTW91bnRhaW4g
+VmlldzEQMA4GA1UECgwHQW5kcm9pZDEQMA4GA1UECwwHQW5kcm9pZDEQMA4GA1UE
+AwwHQW5kcm9pZDEiMCAGCSqGSIb3DQEJARYTYW5kcm9pZEBhbmRyb2lkLmNvbTAe
+Fw0xNDExMDYxOTA3NDBaFw00MjAzMjQxOTA3NDBaMIGUMQswCQYDVQQGEwJVUzET
+MBEGA1UECAwKQ2FsaWZvcm5pYTEWMBQGA1UEBwwNTW91bnRhaW4gVmlldzEQMA4G
+A1UECgwHQW5kcm9pZDEQMA4GA1UECwwHQW5kcm9pZDEQMA4GA1UEAwwHQW5kcm9p
+ZDEiMCAGCSqGSIb3DQEJARYTYW5kcm9pZEBhbmRyb2lkLmNvbTCCASIwDQYJKoZI
+hvcNAQEBBQADggEPADCCAQoCggEBAOjreE0vTVSRenuzO9vnaWfk0eQzYab0gqpi
+6xAzi6dmD+ugoEKJmbPiuE5Dwf21isZ9uhUUu0dQM46dK4ocKxMRrcnmGxydFn6o
+fs3ODJMXOkv2gKXL/FdbEPdDbxzdu8z3yk+W67udM/fW7WbaQ3DO0knu+izKak/3
+T41c5uoXmQ81UNtAzRGzGchNVXMmWuTGOkg6U+0I2Td7K8yvUMWhAWPPpKLtVH9r
+AL5TzjYNR92izdKcz3AjRsI3CTjtpiVABGeX0TcjRSuZB7K9EK56HV+OFNS6I1NP
+jdD7FIShyGlqqZdUOkAUZYanbpgeT5N7QL6uuqcGpoTOkalu6kkCAwEAAaNQME4w
+HQYDVR0OBBYEFH5DM/m7oArf4O3peeKO0ZIEkrQPMB8GA1UdIwQYMBaAFH5DM/m7
+oArf4O3peeKO0ZIEkrQPMAwGA1UdEwQFMAMBAf8wDQYJKoZIhvcNAQEFBQADggEB
+AHO3NSvDE5jFvMehGGtS8BnFYdFKRIglDMc4niWSzhzOVYRH4WajxdtBWc5fx0ix
+NF/+hVKVhP6AIOQa+++sk+HIi7RvioPPbhjcsVlZe7cUEGrLSSveGouQyc+j0+m6
+JF84kszIl5GGNMTnx0XRPO+g8t6h5LWfnVydgZfpGRRg+WHewk1U2HlvTjIceb0N
+dcoJ8WKJAFWdcuE7VIm4w+vF/DYX/A2Oyzr2+QRhmYSv1cusgAeC1tvH4ap+J1Lg
+UnOu5Kh/FqPLLSwNVQp4Bu7b9QFfqK8Moj84bj88NqRGZgDyqzuTrFxn6FW7dmyA
+yttuAJAEAymk1mipd9+zp38=
+-----END CERTIFICATE-----
-- 
2.17.1

